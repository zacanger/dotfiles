# vim: ft=cfg
#
# This is the configuration file of "rifle", ranger's file executor/opener.
# Each line consists of conditions and a command.  For each line the conditions
# are checked and if they are met, the respective command is run.
#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# If you use the special command "ask", rifle will ask you what program to run.
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp> | The regexp matches $1
#   ext <regexp>   | The regexp matches the extension of $1
#   mime <regexp>  | The regexp matches the mime type of $1
#   name <regexp>  | The regexp matches the basename of $1
#   path <regexp>  | The regexp matches the absolute path of $1
#   has <program>  | The program is installed (i.e. located in $PATH)
#   env <variable> | The environment variable "variable" is non-empty
#   file           | $1 is a file
#   directory      | $1 is a directory
#   number <n>     | change the number of this command to n
#   terminal       | stdin, stderr and stdout are connected to a terminal
#   X              | $DISPLAY is not empty (i.e. Xorg runs)
#
# There are also pseudo-conditions which have a "side effect":
#   flag <flags>  | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.
#
# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
# Note: The "New command" serves only as an illustration, the exact
# implementation may differ.
# Note: When using rifle in ranger, there is an additional flag "c" for
# only running the current file even if you have marked multiple files.

#-------------------------------------------
# Websites
#-------------------------------------------
# Rarely installed browsers get higher priority; It is assumed that if you
# install a rare browser, you probably use it.  Firefox/konqueror/w3m on the
# other hand are often only installed as fallback browsers.
# commenting these out because i probably just want to open in vim, lbh
# ext x?html?, has qutebrowser,    X, flag f = qutebrowser -- "$@"
# ext x?html?, has w3m,             terminal = w3m "$@"
# ext x?html?, has lynx,            terminal = lynx -- "$@"

# Special case overrides
ext flp, has open,     X, flag f = open -a "FL Studio 21.app" -- "$@"
ext mlt, has open,     X, flag f = open -a "Shotcut.app" -- "$@"

#-------------------------------------------
# Misc
#-------------------------------------------
# Define the "editor" for text files as first action
mime ^text,  label editor = "vim" -- "$@"
mime ^text,  label pager  = "less" -- "$@"
!mime ^text, label editor, ext html|xml|csv|tex|py|pl|rb|sh|php|js|json|ts = "vim" -- "$@"
!mime ^text, label pager,  ext html|xml|csv|tex|py|pl|rb|sh|php|js|json|ts = "less" -- "$@"

ext 1                         = man "$1"
ext s[wmf]c, has zsnes, X     = zsnes "$1"
ext nes, has fceux, X         = fceux "$1"
ext exe                       = wine "$1"
name ^[mM]akefile$            = make

#--------------------------------------------
# Code
#-------------------------------------------
ext py  = python -- "$1"
ext pl  = perl -- "$1"
ext rb  = ruby -- "$1"
ext sh  = sh -- "$1"
ext php = php -- "$1"

#--------------------------------------------
# Audio without X
#-------------------------------------------
ext mp3|ogg|flac|wav|8gp, has mpv = mpv --vid=no -- "$@"
ext mid = timidity -- "$1"
mime ^audio|mp3$, terminal, has mpv = mpv --vid=no -- "$@"
mime ^audio|ogg$, terminal, has mpv = mpv --vid=no -- "$@"
mime ^audio|ogg$, terminal, has mpv  = mpv --vid=no -- "$@"
mime ^audio|ogg$, terminal, has mpv = mpv --vid=no -- "$@"
mime ^audio|ogg$, terminal, has mpv = mpv --vid=no -- "@"
mime ^audio|midi$, terminal, has timidity = timidity -- "$1"

#--------------------------------------------
# Video/Audio with a GUI
#-------------------------------------------
mime ^video, has mpv, X, flag f = mpv -- "$@"

#--------------------------------------------
# Video without X:
#-------------------------------------------
mime ^video, terminal, !X, has mpv = mpv -- "$@"
mime ^video, terminal, !X, has mpv = mpv -- "$@"

#-------------------------------------------
# Image Viewing:
#-------------------------------------------
mime ^image, has viewnior, X, flag f = viewnior -- "$@"
mime ^image, has feh,      X, flag f = feh -- "$@"
ext xcf,                   X, flag f = gimp -- "$@"
mime ^image, has open,     X, flag f = open -a Preview.app -- "$@"

#-------------------------------------------
# Documents
#-------------------------------------------
ext pdf, has mupdf-gl, X, flag f = mupdf-gl -- "$@"
ext pdf, has mupdf,    X, flag f = mupdf -- "$@"
ext pdf, has open,     X, flag f = open -a Preview.app -- "$@"

ext epub, has mupdf-gl, X, flag f = mupdf-gl -- "$@"
ext epub, has mupdf,    X, flag f = mupdf -- "$@"

ext docx?, has catdoc,       terminal = catdoc -- "$@" | "$PAGER"
ext docx?, has cat-docx,     terminal = catidocx -- "$@" | "$PAGER"

ext od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has pandoc, X, flag f = pandoc "$@"
ext djvu, has evince, X, flag f = evince -- "$@"

#-------------------------------------------
# Archives
#-------------------------------------------
# This requires atool
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has als     = als -- "$@" | "$PAGER"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has als     = als -- "$@" | "$PAGER"
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has aunpack = aunpack -- "$@"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has aunpack = aunpack -- "$@"

# Fallback:
ext tar|gz, has tar = tar vvtf "$@" | "$PAGER"
ext tar|gz, has tar = tar vvxf "$@"

# Define the editor for non-text files + pager as ~~last~~ ~~FIRST~~ no wait, actually last... action
label editor, !mime ^text, !ext html|xml|csv|tex|py|pl|rb|sh|php|js|jsx|css|json|styl|less|scss|sass|md|markdown|ts  = "vim" -- "$@"
label pager,  !mime ^text, !ext html|xml|csv|tex|py|pl|rb|sh|php|js|jsx|css|json|styl|less|scss|sass|md|markdown|ts  = "less" -- "$@"
